{"ast":null,"code":"var _jsxFileName = \"/Users/nathandolbir/ResearchSummer/superchat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u269B\\uFE0F\\uD83D\\uDD25\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction ChatRoom() {\n  _s();\n\n  const msgRef = firebase.firestore().collection('messages'); //ref to messages collection\n\n  const [messageArr, setMessageArr] = useState([]);\n  const [formValue, setFormValue] = useState('');\n\n  function getMessages() {\n    //fill messageArr with each individual doc\n    msgRef.onSnapshot(querySnapshot => {\n      const docs = [];\n      querySnapshot.forEach(doc => {\n        docs.push(doc.data());\n      });\n      setMessageArr(docs);\n    });\n  }\n\n  const sendMessage = async e => {\n    e.preventDefault(); //prevent page from refreshing\n\n    const id = firebase.auth().currentUser;\n    await msgRef.add({\n      text: formValue,\n      createdAt: firebase.firestore().FieldValue.serverTimestamp(),\n      id: id\n    });\n    setFormValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: messageArr && messageArr.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"say something nice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"\\uD83D\\uDD4A\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatRoom, \"1N35wMNzboiaRDWsnOepL99gNCY=\");\n\n_c2 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const text = props.message;\n  const id = props.id; //const messageClass = id === firebase.auth.currentUser.uid ? 'sent' : 'received';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatRoom\");\n$RefreshReg$(_c3, \"ChatMessage\");","map":{"version":3,"sources":["/Users/nathandolbir/ResearchSummer/superchat/src/App.js"],"names":["React","useRef","useState","firebase","useAuthState","useCollectionData","App","ChatRoom","msgRef","firestore","collection","messageArr","setMessageArr","formValue","setFormValue","getMessages","onSnapshot","querySnapshot","docs","forEach","doc","push","data","sendMessage","e","preventDefault","id","auth","currentUser","add","text","createdAt","FieldValue","serverTimestamp","map","msg","target","value","ChatMessage","props","message"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from './firebase'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <header>\n          <h1>‚öõÔ∏èüî•üí¨</h1>\n        </header>\n\n        <ChatRoom/>        \n      </div>\n  );\n}\n\nfunction ChatRoom() {\n  const msgRef = firebase.firestore().collection('messages'); //ref to messages collection\n  const [messageArr, setMessageArr] = useState([]);\n  const [formValue, setFormValue] = useState('');\n  function getMessages() {//fill messageArr with each individual doc\n    msgRef.onSnapshot((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n        docs.push(doc.data());\n      });\n      setMessageArr(docs);\n    });\n  }\n\n  const sendMessage = async (e) => {\n    e.preventDefault();//prevent page from refreshing\n    const id = firebase.auth().currentUser;\n    await msgRef.add({\n      text: formValue,\n      createdAt: firebase.firestore().FieldValue.serverTimestamp(),\n      id: id\n    })\n\n    setFormValue('');\n  }\n\n  return (\n  <>\n    <main>\n\n      {messageArr && messageArr.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n    </form>\n  </>)\n}\n\nfunction ChatMessage(props) {\n  const text = props.message;\n  const id = props.id;\n  //const messageClass = id === firebase.auth.currentUser.uid ? 'sent' : 'received';\n  return (\n    <div>\n  <p>{text}</p>\n  </div>)\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}