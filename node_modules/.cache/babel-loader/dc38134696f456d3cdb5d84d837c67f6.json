{"ast":null,"code":"var _jsxFileName = \"/Users/nathandolbir/ResearchSummer/superchat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB7RKUcnxEjWdZVXuTMMqoKA55rnBOfXXs\",\n  authDomain: \"t5learning.firebaseapp.com\",\n  projectId: \"t5learning\",\n  storageBucket: \"t5learning.appspot.com\",\n  messagingSenderId: \"45828119017\",\n  appId: \"1:45828119017:web:a6dcec2e2aa58547a19378\",\n  measurementId: \"G-FF2C725ECL\"\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction ChatRoom() {\n  _s();\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n  };\n}\n\n_s(ChatRoom, \"38hAA91vZ2snInUbhlRkIAzUs8M=\", false, function () {\n  return [useCollectionData];\n});\n\n_c2 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid\n  } = props.message;\n  messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'message ${messageClass}',\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatRoom\");\n$RefreshReg$(_c3, \"ChatMessage\");","map":{"version":3,"sources":["/Users/nathandolbir/ResearchSummer/superchat/src/App.js"],"names":["firebase","useAuthState","useCollectionData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","messages","map","msg","id","sendMessage","formValue","e","setFormValue","target","value","ChatRoom","messagesRef","firestore","collection","query","orderBy","limit","idField","useState","preventDefault","uid","photoURL","auth","currentUser","add","text","createdAt","FieldValue","serverTimestamp","ChatMessage","props","message","messageClass"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEAF,QAAQ,CAACG,aAAT,CAAuB;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,aALA;AAMnBC,EAAAA,KAAK,EAAE,0CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;;AAWA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBACGC,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,GAAG,iBAAI,QAAC,WAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cAApB;AADf;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,QAAQ,EAAEC,WAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEC,SAAd;AAAyB,QAAA,QAAQ,EAAGC,CAAD,IAAOC,YAAY,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQV,G;;AAeT,SAASW,QAAT,GAAoB;AAAA;;AAClB,QAAMC,WAAW,GAAGC,SAAS,CAACC,UAAV,CAAqB,UAArB,CAApB;AACA,QAAMC,KAAK,GAAGH,WAAW,CAACI,OAAZ,CAAoB,WAApB,EAAiCC,KAAjC,CAAuC,EAAvC,CAAd;AACA,QAAK,CAAChB,QAAD,IAAaV,iBAAiB,CAACwB,KAAD,EAAQ;AAACG,IAAAA,OAAO,EAAE;AAAV,GAAR,CAAnC;AACA,QAAK,CAACZ,SAAD,EAAYE,YAAZ,IAA4BW,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMd,WAAW,GAAG,MAAME,CAAN,IAAY;AAC9BA,IAAAA,CAAC,CAACa,cAAF;AACA,UAAK;AAACC,MAAAA,GAAD;AAAKC,MAAAA;AAAL,QAAkBC,IAAI,CAACC,WAA5B;AACA,UAAMZ,WAAW,CAACa,GAAZ,CAAgB;AACpBC,MAAAA,IAAI,EAAEpB,SADc;AAEpBqB,MAAAA,SAAS,EAAEtC,QAAQ,CAACwB,SAAT,CAAmBe,UAAnB,CAA8BC,eAA9B,EAFS;AAGpBR,MAAAA,GAHoB;AAIpBC,MAAAA;AAJoB,KAAhB,CAAN;AAMAd,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAVD;AAWD;;GAhBQG,Q;UAGWpB,iB;;;MAHXoB,Q;;AAkBT,SAASmB,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAACL,IAAAA,IAAD;AAAOL,IAAAA;AAAP,MAAcU,KAAK,CAACC,OAA1B;AACAC,EAAAA,YAAY,GAAGZ,GAAG,KAAKE,IAAI,CAACC,WAAL,CAAiBH,GAAzB,GAA+B,MAA/B,GAAwC,UAAvD;AACA,sBACE;AAAK,IAAA,SAAS,EAAE,yBAAhB;AAAA,2BACF;AAAA,gBAAIK;AAAJ;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;MAPQI,W;AAQT,eAAe9B,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyB7RKUcnxEjWdZVXuTMMqoKA55rnBOfXXs\",\n    authDomain: \"t5learning.firebaseapp.com\",\n    projectId: \"t5learning\",\n    storageBucket: \"t5learning.appspot.com\",\n    messagingSenderId: \"45828119017\",\n    appId: \"1:45828119017:web:a6dcec2e2aa58547a19378\",\n    measurementId: \"G-FF2C725ECL\"\n})\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div> \n          {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n        </div>\n\n        <form onSubmit={sendMessage}>\n          <input value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n          <button type = \"submit\"></button>\n        </form>\n    </div>\n  );\n}\n\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const[messages] = useCollectionData(query, {idField: 'id'});\n  const[formValue, setFormValue] = useState('');\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const{uid,photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n    setFormValue('');\n  }\n}\n\nfunction ChatMessage(props) {\n  const {text, uid} = props.message;\n  messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (\n    <div className={'message ${messageClass}'}>\n  <p>{text}</p>\n  </div>)\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}