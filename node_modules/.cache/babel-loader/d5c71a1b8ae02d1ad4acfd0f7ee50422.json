{"ast":null,"code":"var _jsxFileName = \"/Users/nathandolbir/ResearchSummer/superchat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from './firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u269B\\uFE0F\\uD83D\\uDD25\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction ChatRoom() {\n  _s();\n\n  const msgRef = firebase.firestore().collection('messages'); //ref to messages collection\n\n  const [formValue, setFormValue] = useState('');\n  const query = msgRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n\n  const sendMessage = async e => {\n    e.preventDefault(); //prevent page from refreshing\n\n    const id = firebase.auth().currentUser;\n    await msgRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      id: id\n    });\n    setFormValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"say something nice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD83D\\uDD4A\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatRoom, \"Cr4vBTvpGFpUcov/O+Ia4a9tYt0=\", false, function () {\n  return [useCollectionData];\n});\n\n_c2 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const text = props.message;\n  const id = props.id; //const messageClass = id === firebase.auth.currentUser.uid ? 'sent' : 'received';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: \"border-style:solid;\",\n      children: \" text \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatRoom\");\n$RefreshReg$(_c3, \"ChatMessage\");","map":{"version":3,"sources":["/Users/nathandolbir/ResearchSummer/superchat/src/App.js"],"names":["React","useRef","useState","firebase","useAuthState","useCollectionData","App","ChatRoom","msgRef","firestore","collection","formValue","setFormValue","query","orderBy","limit","messages","idField","sendMessage","e","preventDefault","id","auth","currentUser","add","text","createdAt","FieldValue","serverTimestamp","map","msg","target","value","ChatMessage","props","message"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;;AAEA,SAASC,GAAT,GAAe;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAXQA,G;;AAaT,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,CAAf,CADkB,CAC0C;;AAE5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMW,KAAK,GAAGL,MAAM,CAACM,OAAP,CAAe,WAAf,EAA4BC,KAA5B,CAAkC,EAAlC,CAAd;AAEA,QAAM,CAACC,QAAD,IAAaX,iBAAiB,CAACQ,KAAD,EAAQ;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAR,CAApC;;AAEA,QAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF,GAD+B,CACZ;;AACnB,UAAMC,EAAE,GAAGlB,QAAQ,CAACmB,IAAT,GAAgBC,WAA3B;AACA,UAAMf,MAAM,CAACgB,GAAP,CAAW;AACfC,MAAAA,IAAI,EAAEd,SADS;AAEfe,MAAAA,SAAS,EAAEvB,QAAQ,CAACM,SAAT,CAAmBkB,UAAnB,CAA8BC,eAA9B,EAFI;AAGfP,MAAAA,EAAE,EAAEA;AAHW,KAAX,CAAN;AAMAT,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAVD;;AAYA,sBACA;AAAA,4BACE;AAAA,gBAEGI,QAAQ,IAAIA,QAAQ,CAACa,GAAT,CAAaC,GAAG,iBAAI,QAAC,WAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAkBA,GAAG,CAACT,EAAtB;AAAA;AAAA;AAAA;AAAA,cAApB;AAFf;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,QAAQ,EAAEH,WAAhB;AAAA,8BAEE;AAAO,QAAA,KAAK,EAAEP,SAAd;AAAyB,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,YAAY,CAACO,CAAC,CAACY,MAAF,CAASC,KAAV,CAAtD;AAAwE,QAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADA;AAgBD;;GArCQzB,Q;UAOYF,iB;;;MAPZE,Q;;AAuCT,SAAS0B,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMT,IAAI,GAAGS,KAAK,CAACC,OAAnB;AACA,QAAMd,EAAE,GAAGa,KAAK,CAACb,EAAjB,CAF0B,CAG1B;;AACA,sBACE;AAAA,2BACF;AAAG,MAAA,KAAK,EAAG,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;MARQY,W;AAST,eAAe3B,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from './firebase'\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <header>\n          <h1>‚öõÔ∏èüî•üí¨</h1>\n        </header>\n\n        <ChatRoom/>        \n      </div>\n  );\n}\n\nfunction ChatRoom() {\n  const msgRef = firebase.firestore().collection('messages'); //ref to messages collection\n  \n  const [formValue, setFormValue] = useState('');\n\n  const query = msgRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const sendMessage = async (e) => {\n    e.preventDefault();//prevent page from refreshing\n    const id = firebase.auth().currentUser;\n    await msgRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      id: id\n    })\n\n    setFormValue('');\n  }\n\n  return (\n  <>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" >üïäÔ∏è</button>\n\n    </form>\n  </>)\n}\n\nfunction ChatMessage(props) {\n  const text = props.message;\n  const id = props.id;\n  //const messageClass = id === firebase.auth.currentUser.uid ? 'sent' : 'received';\n  return (\n    <div>\n  <p style = \"border-style:solid;\"> text </p>\n  </div>)\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}